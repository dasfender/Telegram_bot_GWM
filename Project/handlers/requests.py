import os
from Project.utils.other_utils import get_today_folder
from aiogram import Router, F, types
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
import sys
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
from Project.utils.dealer_utils import load_dealer_codes, save_dealer_codes
from dotenv import load_dotenv
from Project.config import ADMIN_ID

router = Router()
dealer_codes = load_dealer_codes()
load_dotenv()
ADMIN_ID=os.getenv("ADMIN_ID")


dealer_codes = load_dealer_codes()

class RequestForm(StatesGroup):
    waiting_for_text = State()
    waiting_for_photo = State()
    waiting_for_video = State()
    waiting_more_material = State()
    waiting_new_request = State()

def get_photo_video_keyboard():
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üì∑ –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ")],
            [KeyboardButton(text="üé• –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∏–¥–µ–æ")]
        ],
        resize_keyboard=True
    )

def get_yes_no_keyboard(yes_text="–î–∞", no_text="–ù–µ—Ç"):
    return ReplyKeyboardMarkup(
        keyboard=[[KeyboardButton(text=yes_text)], [KeyboardButton(text=no_text)]],
        resize_keyboard=True
    )

# –ù–∞—á–∞–ª–æ –∑–∞–ø—Ä–æ—Å–∞
@router.message(F.text == "üìù –ù–∞–±—Ä–∞—Ç—å —Ç–µ–∫—Å—Ç")
async def start_request(message: types.Message, state: FSMContext):
    await message.answer("‚úçÔ∏è –ü—Ä–∏—à–ª–∏—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.", reply_markup=types.ReplyKeyboardRemove())
    await state.set_state(RequestForm.waiting_for_text)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞
@router.message(RequestForm.waiting_for_text, F.content_type == "text")
async def handle_text(message: types.Message, state: FSMContext):
    user_id = message.from_user.id
    dealer_code = dealer_codes.get(user_id, f"user_{user_id}")
    folder = get_today_folder(dealer_code)
    os.makedirs(folder, exist_ok=True)

    file_path = os.path.join(folder, f"text_{dealer_code}_{message.message_id}.txt")
    with open(file_path, "w", encoding="utf-8") as f:
        f.write(message.text)

    await message.bot.send_message(
        ADMIN_ID,
        f"üì© –ù–æ–≤—ã–π —Ç–µ–∫—Å—Ç –æ—Ç {dealer_code}:\n{message.text}"
    )

    await message.answer(
        "‚úÖ –¢–µ–∫—Å—Ç –ø–æ–ª—É—á–µ–Ω.\n–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å:",
        reply_markup=get_photo_video_keyboard()
    )
    await state.set_state(RequestForm.waiting_more_material)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ
@router.message(RequestForm.waiting_more_material, F.text == "üì∑ –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ")
async def ask_photo(message: types.Message, state: FSMContext):
    await message.answer("üì∑ –ü—Ä–∏—à–ª–∏—Ç–µ —Ñ–æ—Ç–æ.", reply_markup=types.ReplyKeyboardRemove())
    await state.set_state(RequestForm.waiting_for_photo)

@router.message(RequestForm.waiting_for_photo, F.content_type == "photo")
async def handle_photo(message: types.Message, state: FSMContext):
    user_id = message.from_user.id
    dealer_code = dealer_codes.get(user_id, f"user_{user_id}")
    folder = get_today_folder(dealer_code)
    os.makedirs(folder, exist_ok=True)

    file_path = os.path.join(folder, f"photo_{dealer_code}_{message.message_id}.jpg")
    await message.photo[-1].download(destination_file=file_path)

    await message.bot.send_photo(
        ADMIN_ID,
        photo=message.photo[-1].file_id,
        caption=f"üì∑ –§–æ—Ç–æ –æ—Ç {dealer_code}"
    )

    await message.answer(
        "‚úÖ –§–æ—Ç–æ –ø–æ–ª—É—á–µ–Ω–æ.\n–•–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –µ—â—ë –º–∞—Ç–µ—Ä–∏–∞–ª?",
        reply_markup=get_yes_no_keyboard("–î–æ–±–∞–≤–∏—Ç—å –µ—â—ë", "–ó–∞–≤–µ—Ä—à–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É")
    )
    await state.set_state(RequestForm.waiting_more_material)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–∏–¥–µ–æ
@router.message(RequestForm.waiting_more_material, F.text == "üé• –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∏–¥–µ–æ")
async def ask_video(message: types.Message, state: FSMContext):
    await message.answer("üé• –ü—Ä–∏—à–ª–∏—Ç–µ –≤–∏–¥–µ–æ.", reply_markup=types.ReplyKeyboardRemove())
    await state.set_state(RequestForm.waiting_for_video)

@router.message(RequestForm.waiting_for_video, F.content_type == "video")
async def handle_video(message: types.Message, state: FSMContext):
    user_id = message.from_user.id
    dealer_code = dealer_codes.get(user_id, f"user_{user_id}")
    folder = get_today_folder(dealer_code)
    os.makedirs(folder, exist_ok=True)

    file_path = os.path.join(folder, f"video_{dealer_code}_{message.message_id}.mp4")
    await message.video.download(destination_file=file_path)

    await message.bot.send_video(
        ADMIN_ID,
        video=message.video.file_id,
        caption=f"üé• –í–∏–¥–µ–æ –æ—Ç {dealer_code}"
    )

    await message.answer(
        "‚úÖ –í–∏–¥–µ–æ –ø–æ–ª—É—á–µ–Ω–æ.\n–•–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –µ—â—ë –º–∞—Ç–µ—Ä–∏–∞–ª?",
        reply_markup=get_yes_no_keyboard("–î–æ–±–∞–≤–∏—Ç—å –µ—â—ë", "–ó–∞–≤–µ—Ä—à–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É")
    )
    await state.set_state(RequestForm.waiting_more_material)

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ/–∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ
@router.message(RequestForm.waiting_more_material, F.text == "–î–æ–±–∞–≤–∏—Ç—å –µ—â—ë")
async def more_material(message: types.Message, state: FSMContext):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å:", reply_markup=get_photo_video_keyboard())

@router.message(RequestForm.waiting_more_material, F.text == "–ó–∞–≤–µ—Ä—à–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É")
async def finish_material(message: types.Message, state: FSMContext):
    await message.answer("üìå –ó–∞–ø—Ä–æ—Å –∑–∞–≤–µ—Ä—à—ë–Ω. –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –Ω–æ–≤—ã–π, –Ω–∞–∂–º–∏—Ç–µ üìù –ù–∞–±—Ä–∞—Ç—å —Ç–µ–∫—Å—Ç.", reply_markup=get_text_keyboard())
    await state.clear()